import React, { useState } from "react";
import Head from "next/head";

export default function SearchSavedTemplates() {
  const userId = 4; // should probably be something that automatically gets the userid.. 
  const [query, setQuery] = React.useState("");
  const token = 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQsImVtYWlsIjoiZXhhbXBsZTJAZXhhbXBsZS5jb20iLCJyb2xlIjoidXNlciIsImlhdCI6MTczMjQ3ODM4MSwiZXhwIjoxNzMyNDc5MjgxfQ.ljuIJ9kPfy1tabisuTw8EzSoUht-Mpy4_2UjiLNtcgI';

  const handleSubmitView = async () => {
    try {
      const response = await fetch(`/api/code-templates/search-saved?userId=${Number(userId)}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': token,
          'Cache-Control': 'no-cache'
        }
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();

      const formatTemplates = (templates) => {
        return templates.map(template => {
            const tags = template.tags.map(tag => tag.name).join(", ");
            return `Title: ${template.title}\nExplanation: ${template.explanation}\nCode: ${template.code}\nTags: ${tags}\n`; 
        }).join("\n");
      };
    
      document.getElementById("view").innerHTML = formatTemplates(data.savedTemplates);

    } catch (error) {
      console.error("Error saving template:", error);
    }
  };

  const handleSubmitSearch = async () => {
    try {
      const response = await fetch(`/api/code-templates/search-saved?userId=${Number(userId)}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': token,
          'Cache-Control': 'no-cache'
        },
        body: JSON.stringify({
          query: query
        })
      });
      
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      const data = await response.json();

      const formatTemplates = (templates) => {
        return templates.map(template => {
            const tags = template.tags.map(tag => tag.name).join(", ");
            return `Title: ${template.title}\nExplanation: ${template.explanation}\nCode: ${template.code}\nTags: ${tags}\n`; 
        }).join("\n");
      };
    
      document.getElementById("search").innerHTML = formatTemplates(data.savedTemplates);

    } catch (error) {
      console.error("Error saving template:", error);
    }
  };

  const onClickG = () => {
    handleSubmitView();
  };

  const onClickP = () => {
    handleSubmitSearch();
  };

  return (
    <>
      <Head>
        <title>Scriptorium</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <section className="grid grid-cols-1 bg-white py-16 gap-5">

          <div className="container mx-auto bg-violet-900 p-6 rounded-lg shadow-md whitespace-pre-line">
            <button className="h-10 md:h-16 rounded-lg bg-violet-950 hover:bg-violet-400" onClick={() => onClickG()}>
              {"View Existing Templates"}
            </button>
            <p id="view"></p>
          </div>

          <div className="container mx-auto bg-violet-900 p-6 rounded-lg shadow-md whitespace-pre-line">
            <h2 className="text-2xl font-semibold mb-2">Search Templates</h2>
            <div className="grid grid-cols-1 gap-5">
                <input type="search" id="default-search" className="block w-full p-4 ps-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Search Templates..." required onChange={(e) => setQuery(e.target.value)}/>
                <button className="h-10 md:h-16 rounded-lg bg-violet-950 hover:bg-violet-400" onClick={() => onClickP()}>
                  {"Search"}
                </button>
                <p id="search"></p>
            </div>
          </div>
        </section>

      </main>
    </>
  );

}


