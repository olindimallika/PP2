import React, { useState } from "react";
import Head from "next/head";

export default function Templates() {
  const [title, setTitle] = React.useState("");
  const [explanation, setExplanation] = React.useState("");
  const [code, setCode] = React.useState("");
  const [tags, setTags] = React.useState("");
  const [blogs, setBlogs] = React.useState("");

  const handleSubmit = async () => {
    try {
      const response = await fetch('/api/code-templates/save', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjQsImVtYWlsIjoiZXhhbXBsZTJAZXhhbXBsZS5jb20iLCJyb2xlIjoidXNlciIsImlhdCI6MTczMjQ3NDQxMCwiZXhwIjoxNzMyNDc1MzEwfQ.mNOcv1hTxWqelpog9HQYboNHJXe1HxlYWy7DKOuDtks' // replace with actual token
        },
        body: JSON.stringify({
          title: title,
          explanation: explanation,
          code: code,
          tags: tags.split(","), // example tags
          blogPostIds: blogs.split(",").map(Number) // example blog post IDs
        })
      });

      if (!response.ok) {
        throw new Error('Network response was not ok');
      }

      return await response.json();
      
    } catch (error) {
      console.error("Error saving template:", error);
    }
  };

  const onClick = () => {
    const result = handleSubmit();
    if (!result) {
      document.getElementById("error").classList.remove("invisible");
    } else {
      document.getElementById("message").classList.remove("invisible");
      document.getElementById("me").classList.remove("invisible");
      // syntax from stackoverflow "The property 'value' does not exist on value of type 'HTMLElement'"
      (document.getElementById("title") as HTMLInputElement).value = "";
      (document.getElementById("explanation") as HTMLInputElement).value = "";
      (document.getElementById("code") as HTMLInputElement).value = "";
      (document.getElementById("tags") as HTMLInputElement).value = "";
      (document.getElementById("blogPosts") as HTMLInputElement).value = "";
    }
  };

  const handleClick = () => {
    window.location.href='/view-templates';
  };

  return (
    <>
      <Head>
        <title>Scriptorium</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <section className="grid grid-cols-1 bg-white py-16 gap-5">

          <div className="container mx-auto bg-violet-900 p-6 rounded-lg shadow-md">
            <h2 className="text-2xl font-semibold mb-2">Create Template</h2>
            <div className="grid grid-cols-1 gap-5">
              <input type="text" id="title" className="text-black" placeholder="Template Title" value={title} onChange={(e) => setTitle(e.target.value)}></input>
              <input type="text" id="explanation" className="text-black" placeholder="Explanation" value={explanation} onChange={(e) => setExplanation(e.target.value)}></input>
              <textarea id="code" className="text-black" rows={4} placeholder="Write your code here..." value={code} onChange={(e) => setCode(e.target.value)}></textarea>
              <input type="text" id="tags" className="text-black" placeholder="Tags: (eg. tag1, tag2, tag3,...)" value={tags} onChange={(e) => setTags(e.target.value)}></input>
              <input type="text" id="blogPosts" className="text-black" placeholder="Blog Post IDs: (eg. 1, 2, 3,..)" value={blogs} onChange={(e) => setBlogs(e.target.value)}></input>
              <button className="h-10 md:h-16 rounded-lg bg-violet-950 hover:bg-violet-400" onClick={() => onClick()}>
                {"Save"}
              </button>
            </div>
            <p id="error" className="invisible">Template could not be saved!</p>
            <p id="message" className="invisible">Template saved successfully!</p>
            <div id="me" className="invisible hover:text-blue-600" onClick={handleClick}>View templates here</div>
          </div>
        </section>

      </main>
    </>
  );

}


